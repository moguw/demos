{"name": "test_CreateTenancyOption[Args0]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "authToken = {'gibbs-authorization-uat1': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1dWlkIjoiNmMzNWE0NDktZjM3Zi00MDU5LTljOWEt...mRsb3JkIiwiaWF0IjoxNjk2NjQ2NjM5LCJpc3MiOiJhdXRoIiwiZXhwIjoxNjk3MjUxNDM5fQ.ZUSJItNNPOEBUJRWR2mjDo0hoXFJheIVCwpwDOy4ht4'}\nArgs = {'args': \"{'propertyId': 'eyJ0eXBlIjoiUHJvcGVydHkiLCJpZCI6MTY0fQ==', 'tenancyOption': {'academicYearId': 'eyJ0eXBlIjoi... {'apiName': 'createTenancyOption', 'except_code': 200, 'except_msg': 'TenancyOption', 'except_result': 'sucess', ...}}\nquery = 'mutation CreateTenancyOption($propertyId: ID!, $tenancyOption: createTenancyInput!) {\\n  createTenancyOption(property...  roomGroups {\\n    ...QueryRoomGroups\\n  }\\n}\\n\\nfragment QueryRoomGroups on RoomGroup {\\n  id\\n  originId\\n  name\\n}'\n\n    @pytest.mark.smoke\n    @allure.step(\"创建tenancyOptions\")\n    # @pytest.mark.run(order=4)\n    @graphql_control.get_graphql_query()\n    @pytest.mark.parametrize(\"Args\",Yamls()[\"test_create_tenancyOptions\"])\n    def test_CreateTenancyOption(authToken,Args,query=None):\n        # actual_response = http_request(Args[\"args\"])\n        response = http_request(NewArgs(Args),query,authToken)\n        \"\"\"(断言Args[\"response\"]和response的值)\"\"\"\n>       assert_equality(Args[\"response\"],response)\n\nGibbs/TestCase/Settinng/test_createTenancyOptions.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nArgs_rsp = {'apiName': 'createTenancyOption', 'except_code': 200, 'except_msg': 'TenancyOption', 'except_result': 'sucess', ...}, actual_rsp = <Response [400]>\n\n    def assert_equality(Args_rsp,actual_rsp):\n        \"\"\"断言正确用例\"\"\"\n        if is_except_result(Args_rsp) == \"sucess\":\n            codes = Args_rsp[\"except_code\"]\n            apiName = Args_rsp[\"apiName\"]\n            logger.debug(\"期望 status_code 结果为:\"+ str(codes)+\n                        \";实际 status_code 结果为:\"+\n                        str(actual_rsp.status_code))\n>           assert codes == actual_rsp.status_code\nE           AssertionError\n\nGibbs/common/assert_control.py:25: AssertionError"}, "steps": [{"name": "创建tenancyOptions", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/usr/local/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/welcometoosl/Desktop/GDemo/Pytest_Demo/Gibbs/common/graphql_control.py\", line 29, in wrapper\n    return func(query=main_query, *args, **kwargs)\n  File \"/Users/welcometoosl/Desktop/GDemo/Pytest_Demo/Gibbs/TestCase/Settinng/test_createTenancyOptions.py\", line 18, in test_CreateTenancyOption\n    assert_equality(Args[\"response\"],response)\n  File \"/Users/welcometoosl/Desktop/GDemo/Pytest_Demo/Gibbs/common/assert_control.py\", line 25, in assert_equality\n    assert codes == actual_rsp.status_code\n"}, "parameters": [{"name": "authToken", "value": "{'gibbs-authorization-uat1': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1dWlkIjoiNmMzNWE0NDktZjM3Zi00MDU5LTljOWEtODBhMjFjNGE0ZjVmIiwidXNlcl9pZCI6NDEsInJvbGVfdHlwZSI6ImxhbmRsb3JkIiwiaWF0IjoxNjk2NjQ2NjM5LCJpc3MiOiJhdXRoIiwiZXhwIjoxNjk3MjUxNDM5fQ.ZUSJItNNPOEBUJRWR2mjDo0hoXFJheIVCwpwDOy4ht4'}"}, {"name": "Args", "value": "{'case': {'id': 'TO_01'}, 'dependence_case': {'is_dependent': True, 'caseId': ['AY_01'], 'key': ['academicYearId']}, 'args': {'propertyId': 'eyJ0eXBlIjoiUHJvcGVydHkiLCJpZCI6MTY0fQ==', 'tenancyOption': {'academicYearId': '$academicYearId', 'name': 'TO_01$randomNum', 'bookingCategory': 'DIRECT_LET', 'description': 'description', 'endDate': '2023-11-02', 'endDateType': 'EQ', 'freeCancelBehaviorType': 'BEFORE', 'freeCancelInterval': 1, 'freeCancelPointType': 'BOOKING_CONFIRMED_DATE', 'intervalForTurnaround': 0, 'roomGroupIds': ['eyJ0eXBlIjoiUm9vbUdyb3VwIiwiaWQiOjE0MzR9'], 'startDate': '2023-09-03', 'startDateType': 'EQ', 'tenancyLength': 60, 'tenancyLengthType': 'EQ', 'tenancyType': 'FIXED', 'validFrom': '2023-09-02', 'validTo': '2023-10-03', 'viewOnWebsite': True, 'linkToNomination': True, 'isDifferentChargingDate': True, 'chargingStartDate': '2023-09-03', 'chargingEndDate': '2023-11-01'}}, 'response': {'apiName': 'createTenancyOption', 'except_result': 'sucess', 'except_code': 200, 'except_msg': 'TenancyOption', 'sql_query': ''}}"}], "start": 1696646714275, "stop": 1696646717669}], "attachments": [{"name": "log", "source": "470ff17f-6adf-4c68-9a25-dd57eee837ad-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "fb5fa735-8b89-4b15-a483-a197cb5b9ca1-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "Args", "value": "{'case': {'id': 'TO_01'}, 'dependence_case': {'is_dependent': True, 'caseId': ['AY_01'], 'key': ['academicYearId']}, 'args': {'propertyId': 'eyJ0eXBlIjoiUHJvcGVydHkiLCJpZCI6MTY0fQ==', 'tenancyOption': {'academicYearId': '$academicYearId', 'name': 'TO_01$randomNum', 'bookingCategory': 'DIRECT_LET', 'description': 'description', 'endDate': '2023-11-02', 'endDateType': 'EQ', 'freeCancelBehaviorType': 'BEFORE', 'freeCancelInterval': 1, 'freeCancelPointType': 'BOOKING_CONFIRMED_DATE', 'intervalForTurnaround': 0, 'roomGroupIds': ['eyJ0eXBlIjoiUm9vbUdyb3VwIiwiaWQiOjE0MzR9'], 'startDate': '2023-09-03', 'startDateType': 'EQ', 'tenancyLength': 60, 'tenancyLengthType': 'EQ', 'tenancyType': 'FIXED', 'validFrom': '2023-09-02', 'validTo': '2023-10-03', 'viewOnWebsite': True, 'linkToNomination': True, 'isDifferentChargingDate': True, 'chargingStartDate': '2023-09-03', 'chargingEndDate': '2023-11-01'}}, 'response': {'apiName': 'createTenancyOption', 'except_result': 'sucess', 'except_code': 200, 'except_msg': 'TenancyOption', 'sql_query': ''}}"}], "start": 1696646714274, "stop": 1696646717673, "uuid": "53fedbb0-2e58-4bca-904a-109afc216956", "historyId": "4de11da0120013f93f803181992afe4a", "testCaseId": "ce0647a36f437924aafff433686764b3", "fullName": "Gibbs.TestCase.Settinng.test_createTenancyOptions#test_CreateTenancyOption", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "Gibbs.TestCase.Settinng"}, {"name": "suite", "value": "test_createTenancyOptions"}, {"name": "host", "value": "welcometoOSLdeMacBook-Pro-2.local"}, {"name": "thread", "value": "51738-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Gibbs.TestCase.Settinng.test_createTenancyOptions"}]}